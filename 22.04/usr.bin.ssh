# Author: Simon Deziel <simon.deziel@gmail.com>

include <tunables/global>

profile ssh /usr/bin/ssh {
  include <abstractions/base>
  include <abstractions/nameservice>
  include <abstractions/openssl>
  include <abstractions/X>

  capability setuid,
  capability setgid,

  signal (receive) set=(int,stp,term,winch) peer=scp,
  signal (receive) set=(int,stp,term,winch) peer=sftp,
  signal (receive) set=(int,stp,term,winch) peer=sshfs,

  unix (send,receive) type=stream peer=(label=sftp),
  unix (send,receive) type=stream peer=(label=ssh),
  unix (send,receive) type=stream peer=(label=ssh//*),
  unix (send,receive) type=stream peer=(label=sshfs),

  /etc/ssh/ssh_config r,
  /etc/ssh/ssh_config.d/ r,
  /etc/ssh/ssh_config.d/** r,
  /etc/ssh/ssh_known_hosts{,2} r,

  # for tun/tap tunneling
  /dev/net/tun rw,

  # to unlock private keys
  /dev/tty rw,
  /usr/lib/openssh/gnome-ssh-askpass mix,
  /usr/lib/ssh/ssh-askpass mix,

  owner /dev/pts/[0-9]* rw,
  owner /run/user/[0-9]*/keyring*/ssh rw,
  owner /run/user/[0-9]*/ssh-*.sock* rwl,
  owner /run/user/[0-9]*/openssh_agent rw,
  owner @{PROC}/@{pid}/fd/ r,

  # human users
  owner @{HOME}/.ssh/   rw,
  owner @{HOME}/.ssh/** rl,
  owner @{HOME}/.ssh/known_hosts{,.*} rwl,
  owner @{HOME}/.ssh/*control*[0-9][0-9]* rwl,
  owner @{HOME}/.ssh/control/** rwl,
  audit deny @{HOME}/.ssh/authorized_keys{,2} rw,
  audit deny @{HOME}/.ssh/config w,
  audit deny @{HOME}/.ssh/id_{dsa,rsa,ecdsa,ed25519}{,.pub} w,

  # system users
  owner /var/lib/*/.ssh/   rw,
  owner /var/lib/*/.ssh/** rl,
  owner /var/lib/*/.ssh/known_hosts{,.*} rwl,
  owner /var/lib/*/.ssh/*control*[0-9][0-9]* rwl,
  owner /var/lib/*/.ssh/control/** rwl,
  audit deny /var/lib/*/.ssh/authorized_keys{,2} rw,
  audit deny /var/lib/*/.ssh/config w,
  audit deny /var/lib/*/.ssh/id_{dsa,rsa,ecdsa,ed25519}{,.pub} w,

  # uvtools
  owner /tmp/uvt-kvm.known_hoststmp?????? r,

  # syncoid
  owner /tmp/syncoid-* rwl,

  # for ProxyCommand
  /{,usr/}bin/bash  Cx -> proxycommand,
  /{,usr/}bin/dash  Cx -> proxycommand,
  /usr/bin/ssh      mr,

  profile proxycommand {
    include <abstractions/base>

    unix (send,receive) type=stream peer=(label=ssh),

    /{,usr/}bin/bash  mr,
    /{,usr/}bin/dash  mr,
    /usr/bin/ssh      Px,

    # XXX: Cx doesn't work. For details, see
    # https://lists.ubuntu.com/archives/apparmor/2012-November/003114.html
    #/usr/bin/xauth Cx -> xauth,
    /usr/bin/xauth Px -> /usr/bin/ssh//xauth,

    # unlocking the key is done by the parent so why is this needed?
    /dev/tty rw,
  }

  /tmp/.X11-unix/* r,
  owner /tmp/ssh-*/xauthfile w,
  profile xauth {
    include <abstractions/base>
    include <abstractions/X>

    unix (send,receive) type=stream peer=(label=ssh),

    /usr/bin/xauth r,
    /tmp/.X11-unix/* rw,

    owner link /tmp/ssh-*/xauthfile   -> /tmp/ssh-*/xauthfile-n,
    owner link /tmp/ssh-*/xauthfile-l -> /tmp/ssh-*/xauthfile-c,
    owner /tmp/ssh-*/xauthfile   r,
    owner /tmp/ssh-*/xauthfile-c w,
    owner /tmp/ssh-*/xauthfile-l w,
    owner /tmp/ssh-*/xauthfile-n w,

    # for ssh -Y
    owner link @{HOME}/.Xauthority-l -> /**/.Xauthority-c,
    owner @{HOME}/.Xauthority-c w,
  }

  include <local/usr.bin.ssh>
}
